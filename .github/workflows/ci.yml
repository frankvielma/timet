name: Ruby

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions:
  contents: read

jobs:
  tests:
    strategy:
      fail-fast: false
      matrix:
        ruby-version: ["3.3"]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby-version }}
          bundler-cache: true

      - name: Install dependencies
        run: |
          gem install bundler
          bundle install --jobs 4 --retry 3

      - name: Create .env file
        run: |
          mkdir -p /tmp/.timet
          echo "S3_ENDPOINT=http://localhost:9000" >> /tmp/.timet/.env
          echo "S3_ACCESS_KEY=test" >> /tmp/.timet/.env
          echo "S3_SECRET_KEY=tst123" >> /tmp/.timet/.env

      - name: Code Climate Setup
        run: |
          curl -fL https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
          chmod +x ./cc-test-reporter
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}

      - name: Code Climate Before Build
        run: ./cc-test-reporter before-build
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}

      - name: Run tests with coverage
        run: |
          bundle exec rspec
        env:
          COVERAGE: true

      - name: Format & Upload Coverage
        run: |
          ls -lah coverage
          cat coverage/lcov.info || true
          ./cc-test-reporter format-coverage coverage/lcov.info -t lcov -o coverage/codeclimate.json
          ./cc-test-reporter upload-coverage -i coverage/codeclimate.json
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}

      - name: Code Climate After Build
        if: always()
        run: ./cc-test-reporter after-build -t lcov --exit-code $?
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
